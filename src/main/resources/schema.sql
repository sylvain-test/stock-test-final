-- Create ROLES table
CREATE TABLE IF NOT EXISTS ROLES (
    ID BIGINT PRIMARY KEY,
    NAME VARCHAR(50) NOT NULL,
    DESCRIPTION VARCHAR(255)
);

-- Create USERS table
CREATE TABLE IF NOT EXISTS USERS (
    ID BIGINT PRIMARY KEY,
    USERNAME VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE,
    FULL_NAME VARCHAR(100),
    ENABLED BOOLEAN DEFAULT TRUE
);

-- Create USER_ROLES table
CREATE TABLE IF NOT EXISTS USER_ROLES (
    USER_ID BIGINT,
    ROLE_ID BIGINT,
    PRIMARY KEY (USER_ID, ROLE_ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID)
);

-- Create CATEGORIES table
CREATE TABLE IF NOT EXISTS CATEGORIES (
    ID BIGINT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(255),
    CREATED_AT TIMESTAMP,
    UPDATED_AT TIMESTAMP
);

-- Create SUPPLIER table
CREATE TABLE IF NOT EXISTS SUPPLIER (
    ID BIGINT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    EMAIL VARCHAR(100),
    ADDRESS VARCHAR(255),
    PHONE VARCHAR(20),
    CONTACT_PERSON VARCHAR(100)
);

-- Create PRODUCTS table
CREATE TABLE IF NOT EXISTS PRODUCTS (
    ID BIGINT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    DESCRIPTION VARCHAR(255),
    SKU VARCHAR(50) UNIQUE NOT NULL,
    PURCHASE_PRICE DECIMAL(10,2) NOT NULL,
    SELLING_PRICE DECIMAL(10,2) NOT NULL,
    STOCK_QUANTITY INT DEFAULT 0,
    MIN_STOCK_LEVEL INT,
    MAX_STOCK_LEVEL INT,
    SUPPLIER_ID BIGINT,
    CREATION_DATE TIMESTAMP,
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID)
);

-- Create PRODUCT_CATEGORIES table
CREATE TABLE IF NOT EXISTS PRODUCT_CATEGORIES (
    PRODUCT_ID BIGINT,
    CATEGORY_ID BIGINT,
    PRIMARY KEY (PRODUCT_ID, CATEGORY_ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
    FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORIES(ID)
);

-- Create LOCATIONS table
CREATE TABLE IF NOT EXISTS LOCATIONS (
    ID BIGINT PRIMARY KEY,
    NAME VARCHAR(100) NOT NULL,
    ADDRESS VARCHAR(255),
    TYPE VARCHAR(50)
);

-- Create PRODUCT_LOCATIONS table
CREATE TABLE IF NOT EXISTS PRODUCT_LOCATIONS (
    ID BIGINT PRIMARY KEY,
    PRODUCT_ID BIGINT,
    LOCATION_ID BIGINT,
    QUANTITY INT DEFAULT 0,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
    FOREIGN KEY (LOCATION_ID) REFERENCES LOCATIONS(ID)
);

-- Create CUSTOMERS table
CREATE TABLE IF NOT EXISTS CUSTOMERS (
    ID BIGINT PRIMARY KEY,
    FIRST_NAME VARCHAR(50) NOT NULL,
    LAST_NAME VARCHAR(50) NOT NULL,
    EMAIL VARCHAR(100) UNIQUE,
    PHONE VARCHAR(20),
    ADDRESS VARCHAR(255)
);

-- Create CUSTOMER_ORDERS table
CREATE TABLE IF NOT EXISTS CUSTOMER_ORDERS (
    ID BIGINT PRIMARY KEY,
    CUSTOMER_ID BIGINT,
    ORDER_DATE DATE,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10,2),
    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(ID)
);

-- Create ORDER_ITEMS table
CREATE TABLE IF NOT EXISTS ORDER_ITEMS (
    ID BIGINT PRIMARY KEY,
    ORDER_ID BIGINT,
    PRODUCT_ID BIGINT,
    QUANTITY INT,
    UNIT_PRICE DECIMAL(10,2),
    TOTAL_PRICE DECIMAL(10,2),
    FOREIGN KEY (ORDER_ID) REFERENCES CUSTOMER_ORDERS(ID),
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);

-- Create SUPPLIER_ORDERS table
CREATE TABLE IF NOT EXISTS SUPPLIER_ORDERS (
    ID BIGINT PRIMARY KEY,
    SUPPLIER_ID BIGINT,
    ORDER_DATE DATE,
    EXPECTED_DELIVERY DATE,
    STATUS VARCHAR(50),
    TOTAL_AMOUNT DECIMAL(10,2),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIER(ID)
);

-- Create PRODUCT_MOVEMENTS table
CREATE TABLE IF NOT EXISTS PRODUCT_MOVEMENTS (
    ID BIGINT PRIMARY KEY,
    PRODUCT_ID BIGINT,
    FROM_LOCATION_ID BIGINT,
    TO_LOCATION_ID BIGINT,
    QUANTITY INT,
    MOVEMENT_DATE DATE,
    MOVEMENT_TYPE VARCHAR(50),
    REFERENCE_ID BIGINT,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID),
    FOREIGN KEY (FROM_LOCATION_ID) REFERENCES LOCATIONS(ID),
    FOREIGN KEY (TO_LOCATION_ID) REFERENCES LOCATIONS(ID)
);

-- Create INVENTORY_ALERTS table
CREATE TABLE IF NOT EXISTS INVENTORY_ALERTS (
    ID BIGINT PRIMARY KEY,
    PRODUCT_ID BIGINT,
    ALERT_TYPE VARCHAR(50),
    THRESHOLD INT,
    CURRENT_LEVEL INT,
    ALERT_DATE DATE,
    RESOLVED BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(ID)
);
